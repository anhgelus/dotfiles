environment {
    ELECTRON_OZONE_PLATFORM_HINT "auto"
}

input {
    keyboard {
        xkb {
            layout "fr"
            variant "oss"
            options "compose:menu"
        }
        numlock
    }

    // Next sections include libinput settings.
    // Omitting settings disables them, or leaves them at their default values.
    // All commented-out settings here are examples, not defaults.
    touchpad {
        // off
        tap
        // dwt
        // dwtp
        // drag false
        // drag-lock
        natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }

    mouse {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "no-scroll"
    }

    trackpoint {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "on-button-down"
        // scroll-button 273
        // scroll-button-lock
        // middle-emulation
    }

    // Uncomment this to make the mouse warp to the center of newly focused windows.
    warp-mouse-to-focus

    // Focus windows and outputs automatically when moving the mouse into them.
    // Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    focus-follows-mouse max-scroll-amount="80%"
}

cursor {
    xcursor-theme "Adwaita"
    xcursor-size 24 

    hide-after-inactive-ms 5000
}

output "HDMI-A-1" {
    mode "1920x1080@144"
    scale 1
    transform "normal"
    position x=0 y=0
}

output "eDP-1" {
    mode "1920x1080@60"
    scale 1
    transform "normal"
    position x=1920 y=0
}

layout {
    gaps 16

    center-focused-column "never"

    preset-column-widths {
        proportion 0.33
        proportion 0.5
        proportion 0.75
        proportion 0.9

        // fixed 1920
    }

    default-column-width { proportion 0.5; }

    focus-ring {
        // off

        width 4
        active-color "#84A98C"
        inactive-color "#2F3E46"
    }

    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        off

        width 4
        active-color "#ffc87f"
        inactive-color "#505050"

        urgent-color "#9b0000"
    }

    shadow {
        // Uncomment the next line to enable shadows.
        // on

        softness 30
        spread 5
        offset x=0 y=5
        color "#0007"
    }

    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

spawn-at-startup "waybar"
spawn-at-startup "swww-daemon"
spawn-at-startup "pipewire"

// To run a shell command (with variables, pipes, etc.), use spawn-sh-at-startup:
// spawn-sh-at-startup "qs -c ~/source/qs/MyAwesomeShell"

hotkey-overlay {
    // Uncomment this line to disable the "Important Hotkeys" pop-up at startup.
    // skip-at-startup
}

prefer-no-csd

screenshot-path "~/Images/Screenshots/%Y-%m-%d %H-%M-%S.png"

animations {
    // Uncomment to turn off all animations.
    // off

    // Slow down all animations by this factor. Values below 1 speed them up instead.
    // slowdown 3.0
}

  ////////////
 // OPACITY /
////////////
window-rule {
    match is-focused=false is-active=false is-floating=false
    opacity 0.9
}

window-rule {
    exclude is-focused=false is-active=false is-floating=false
    opacity 0.98
}

// disable reduced opacity for specific windows
window-rule {
    exclude is-focused=false is-active=false is-floating=false
    match app-id="mpv"
    match app-id="discord"
    match app-id="Minecraft.*"

    opacity 1.0 
}

  /////////////
 // SPECIFIC /
/////////////

window-rule {
    match app-id="discord"
    default-column-width { proportion 1.0; }
}

window-rule {
    match app-id="zen"
    default-column-width { proportion 0.9; }
}

window-rule {
    match app-id="Minecraft.*"
    default-column-width { proportion 1.0; }
}

// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    // This app-id regular expression will work for both:
    // - host Firefox (app-id is "firefox")
    // - Flatpak Firefox (app-id is "org.mozilla.firefox")
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

window-rule {
    match app-id="thunar"
    open-floating true
}

window-rule {
    match app-id="Firefox" title=".*Bitwarden.*"
    open-floating true
}

window-rule {
    match app-id="xdg-desktop-portal-gtk"
    open-floating true
}

window-rule {
    match app-id="org.gnome.Loupe"
    open-floating true
}

window-rule {
    match app-id="mpv"
    open-floating true
    min-width 1280
    max-width 1280
    min-height 720
    max-height 720
}

window-rule {
    match app-id="org.gnome.FileRoller"
    open-floating true
}

// Example: block out two password managers from screen capture.
/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

// Example: enable rounded corners for all windows.
/-window-rule {
    geometry-corner-radius 12
    clip-to-geometry true
}

binds {
    Mod+Shift+Comma { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+Return hotkey-overlay-title="Open a Terminal: foot" { spawn "foot"; }
    Mod+D hotkey-overlay-title="Run an Application: rofi" { spawn "rofi" "-show" "drun"; }
    Super+Alt+L hotkey-overlay-title="Lock the Screen: swaylock" { spawn "swaylock"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }

    // not working on my void (I don't have this), but it could be interesting on my laptop
    XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "+10%"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "10%-"; }

    Mod+O repeat=false { toggle-overview; }

    Mod+Q repeat=false { close-window; }

    // move focus
    Mod+Left  { focus-column-left; }
    Mod+Right { focus-column-right; }
    Mod+Down  { focus-window-or-workspace-down; }
    Mod+Up    { focus-window-or-workspace-up; }
    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    // move focused window
    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }
    
    // move focus between monitors
    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    // move focused window between monitors
    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02+"; }
    // Mod+TouchpadScrollUp   { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02-"; }

    // move focus
    Mod+ampersand { focus-workspace 1; }
    Mod+eacute { focus-workspace 2; }
    Mod+quotedbl { focus-workspace 3; }
    Mod+apostrophe { focus-workspace 4; }
    Mod+parenleft { focus-workspace 5; }
    Mod+minus { focus-workspace 6; }
    Mod+egrave { focus-workspace 7; }
    Mod+underscore { focus-workspace 8; }
    Mod+ccedilla { focus-workspace 9; }
    // move focused window to
    Mod+Ctrl+ampersand { move-column-to-workspace 1; }
    Mod+Ctrl+eacute { move-column-to-workspace 2; }
    Mod+Ctrl+quotedbl { move-column-to-workspace 3; }
    Mod+Ctrl+apostrophe { move-column-to-workspace 4; }
    Mod+Ctrl+parenleft { move-column-to-workspace 5; }
    Mod+Ctrl+minus { move-column-to-workspace 6; }
    Mod+Ctrl+egrave { move-column-to-workspace 7; }
    Mod+Ctrl+underscore { move-column-to-workspace 8; }
    Mod+Ctrl+ccedilla { move-column-to-workspace 9; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // stack windows
    Mod+Comma  { consume-window-into-column; }
    Mod+Semicolon { expel-window-from-column; }

    // modify column size
    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Ctrl+F { expand-column-to-available-width; }
    // fullscreen
    Mod+Shift+F { fullscreen-window; }

    // center windows
    Mod+C { center-column; }
    Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    Mod+J { set-column-width "-10%"; }
    Mod+K { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+J { set-window-height "-10%"; }
    Mod+Shift+K { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }

    // screenshots
    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }
}
